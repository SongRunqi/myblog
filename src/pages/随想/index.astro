---
import BaseHead from '../../components/BaseHead.astro';
import Header from '../../components/Header.astro';
import Footer from '../../components/Footer.astro';
import { SITE_TITLE, SITE_DESCRIPTION } from '../../consts';
import { getCollection } from 'astro:content';
import FormattedDate from '../../components/FormattedDate.astro';

const posts = (await getCollection('ÈöèÊÉ≥')).sort(
	(a, b) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf()
);

// ÁîüÊàêÈöèÊú∫ÁöÑÂÄæÊñúËßíÂ∫¶
const getRandomRotation = () => {
	return Math.random() * 6 - 3; // -3Â∫¶Âà∞3Â∫¶‰πãÈó¥ÁöÑÈöèÊú∫ËßíÂ∫¶
};

// ÁîüÊàêÈöèÊú∫ÁöÑ‰æøÁ≠æÈ¢úËâ≤
const noteColors = ['#feff9c', '#fff740', '#7afcff', '#ff65a3', '#ff7eb9'];
const getRandomColor = () => {
	return noteColors[Math.floor(Math.random() * noteColors.length)];
};
---

<!doctype html>
<html lang="zh-CN">
	<head>
		<BaseHead title={`ÈöèÊÉ≥ | ${SITE_TITLE}`} description={SITE_DESCRIPTION} />
		<style>
			main {
				width: 960px;
				max-width: calc(100% - 2em);
				margin: 0 auto;
				padding: 3em 1em;
			}
			.notes-container {
				display: grid;
				grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));
				gap: 2rem;
				padding: 2rem;
			}
			.note {
				background-color: var(--color);
				padding: 1.5rem;
				border-radius: 8px;
				box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
				transform: rotate(var(--rotation));
				transition: all 0.3s ease;
				position: relative;
				min-height: 200px;
				display: flex;
				flex-direction: column;
			}
			.note::before {
				content: '';
				position: absolute;
				top: -12px;
				left: 50%;
				transform: translateX(-50%);
				width: 40px;
				height: 40px;
				background-color: #f4f4f4;
				border-radius: 50%;
				box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
				z-index: -1;
			}
			.note:hover {
				transform: rotate(0deg) scale(1.05);
				box-shadow: 0 8px 16px rgba(0, 0, 0, 0.2);
				z-index: 1;
			}
			.title {
				margin: 0;
				font-size: 1.4rem;
				color: #333;
				margin-bottom: 1rem;
				font-family: "Ê•∑‰Ωì", KaiTi, serif;
			}
			.date {
				margin-top: auto;
				color: #666;
				font-size: 0.9rem;
				font-style: italic;
			}
			.description {
				color: #555;
				font-size: 1rem;
				margin: 0.5rem 0;
				flex-grow: 1;
			}
			.page-title {
				text-align: center;
				font-size: 2.5rem;
				color: #333;
				margin-bottom: 2rem;
				font-family: "Ê•∑‰Ωì", KaiTi, serif;
			}
		</style>
	</head>
	<body>
		<Header />
		<main>
			<h1 class="page-title">üìù ÈöèÊÉ≥Êú≠ËÆ∞</h1>
			<div class="notes-container">
				{
					posts.map((post) => (
						<a href={`/ÈöèÊÉ≥/${post.slug}/`} style={`--rotation: ${getRandomRotation()}deg; --color: ${getRandomColor()}`}>
							<article class="note">
								<h4 class="title">{post.data.title}</h4>
								{post.data.description && 
									<p class="description">{post.data.description}</p>
								}
								<p class="date">
									<FormattedDate date={post.data.pubDate} />
								</p>
							</article>
						</a>
					))
				}
			</div>
		</main>
		<Footer />
	</body>
</html> 